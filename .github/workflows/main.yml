name: portfolio_node_app

on:
  push:
    branches: [ "main" ]
jobs:
    deploy:
        runs-on: ubuntu-latest #run this workflow on ubuntu instance
        permissions: #make sure we add permission to read and write package
          contents: read
          packages: write
        steps:
        - name: Checkout Code
          uses: actions/checkout@v1 #checkouts your repo, so this workflow can access it
        - name: Log in to GHCR
          env:
              REGISTRY: ghcr.io #create env called REGISTRY
          uses: docker/login-action@v3 #checkouts GHCR repo, so this workflow can access it
          with:
              registry: ${{ env.REGISTRY }} #parse REGISTRY env value to here. Make sure it is correctly stating ghcr.io
              username: ${{ github.actor }} #this will be our github account
              password: ${{ secrets.CR_PAT }} #parse the value of repository secret called CR_PAT that we have created earlier
        - name: Login to GCR #login to GCR
          env:
            PROJECT_ID: portfolio-23 #create env called PROJECT_ID consisted of our actual GCP Project ID
          uses: google-github-actions/auth@v2 #checkouts GCR repo, so this workflow can access it
          with:
            credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }} #parse the value of repository secret called SERVICE_ACCOUNT_KEY that we have created earlier
            project_id: ${{ env.PROJECT_ID }} #parse the value of env called PROJECT_ID
        - name: 'Set up Cloud SDK'
          uses: 'google-github-actions/setup-gcloud@v1'
        - name: Build Docker Image
          env:
            IMAGE_NAME: portfolio #create env called IMAGE_NAME consisted of actual name of Docker Image after we build
            PROJECT_ID: portfolio-23 #create env called PROJECT_ID consisted of our actual GCP Project ID
          run: docker build -t $IMAGE_NAME:latest . #build the docker image  
        - name: Configure Docker Client
          run:  |-
            gcloud auth configure-docker --quiet #authenticate to gcr
            
        - name: Push Docker Image to Container Registry GCR
          env: 
            IMAGE_NAME: portfolio #create env called IMAGE_NAME consisted of actual name of Docker Image after we build
            PROJECT_ID: portfolio-23 #create env called PROJECT_ID consisted of our actual GCP Project ID
            #tag docker image to gcr image format then push to gcr
          run: |-
            docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest 
            docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest 
          
        - name: Extract metadata (tags, labels) for Docker GHCR
          env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository }}
          id: meta
          uses: docker/metadata-action@v3
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} #create ghcr image format within as id called meta
        - name: Build and push Docker image
          uses: docker/build-push-action@4 #push docker image to ghcr
          with:
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
